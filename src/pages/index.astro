---
import BaseHead from "../components/BaseHead.astro"
import Header from "../components/Header.astro"
import Footer from "../components/Footer.astro"
import { SITE_TITLE, SITE_DESCRIPTION } from "../config"

let projectsByYear: Map<number, any[]> = await (async (): Promise<
  Map<number, any[]>
> => {
  let m: Map<number, any[]> = new Map()
  Object.values(import.meta.glob("./projects/*.{md,mdx}", { eager: true }))
    .sort(
      (a: any, b: any) =>
        new Date(b.frontmatter.startDate).valueOf() -
        new Date(a.frontmatter.startDate).valueOf(),
    )
    // we don't have to sort any more after this step because we already sorted
    // before
    .forEach((g: any) => {
      const y = new Date(g.frontmatter.startDate).getFullYear()
      if (m.has(y)) {
        m.get(y)!.push(g.frontmatter)
      } else {
        m.set(y, [g.frontmatter])
      }
    })
  return m
})()
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      ul {
        list-style-type: none;
        padding: unset;
      }
      ul li {
        display: grid;
        grid-template-columns: minmax(0, 1fr) minmax(0, 1.5fr) minmax(0, 5fr);
      }
      ul li div:nth-child(1) {
        font-style: italic;
        color: #595959;
      }
      ul li a:visited {
        color: #8e32dc;
      }
    </style>
  </head>
  <body>
    <Header title={SITE_TITLE} />
    <main>
      Hello, I'm Andy. Here are some of the projects I've worked on:
      {
        [...projectsByYear].reverse().map(([year, projects]) => (
          <>
            <h2>{year}:</h2>
            <ul>
              {projects.map((project: any) => (
                <li>
                  <div>
                    <time datetime={project.startDate}>
                      {new Date(project.startDate).toLocaleDateString("en-us", {
                        month: "short",
                        day: "numeric",
                      })}
                    </time>
                  </div>
                  <div>
                    {project.link ? (
                      <a href={project.link}>{project.title}</a>
                    ) : (
                      <span style="color: lightgray">{project.title}</span>
                    )}
                  </div>
                  <i> {project.description}</i>
                </li>
              ))}
            </ul>
          </>
        ))
      }
    </main>
    <Footer />
  </body>
</html>
